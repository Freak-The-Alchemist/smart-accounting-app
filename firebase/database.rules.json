{
  "rules": {
    ".read": false,
    ".write": false,
    
    "users": {
      "$uid": {
        ".read": "auth != null && (auth.uid === $uid || root.child('users').child(auth.uid).child('role').val() === 'manager')",
        ".write": "auth != null && (auth.uid === $uid || root.child('users').child(auth.uid).child('role').val() === 'manager')",
        ".validate": "newData.hasChildren(['email', 'displayName', 'createdAt', 'updatedAt'])",
        "email": {
          ".validate": "newData.isString() && newData.val().matches(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i)"
        },
        "displayName": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "createdAt": {
          ".validate": "newData.isNumber()"
        },
        "updatedAt": {
          ".validate": "newData.isNumber()"
        }
      }
    },
    
    "transactions": {
      "$uid": {
        ".read": "auth != null && auth.uid === $uid",
        "$transactionId": {
          ".write": "auth != null && auth.uid === $uid",
          ".validate": "newData.hasChildren(['amount', 'type', 'category', 'description', 'createdAt', 'updatedAt'])",
          "amount": {
            ".validate": "newData.isNumber()"
          },
          "type": {
            ".validate": "newData.isString() && (newData.val() === 'income' || newData.val() === 'expense')"
          },
          "category": {
            ".validate": "newData.isString() && newData.val().length > 0"
          },
          "description": {
            ".validate": "newData.isString()"
          },
          "createdAt": {
            ".validate": "newData.isNumber()"
          },
          "updatedAt": {
            ".validate": "newData.isNumber()"
          }
        }
      }
    },
    
    "categories": {
      "$uid": {
        ".read": "auth != null && auth.uid === $uid",
        "$categoryId": {
          ".write": "auth != null && auth.uid === $uid",
          ".validate": "newData.hasChildren(['name', 'type', 'createdAt', 'updatedAt'])",
          "name": {
            ".validate": "newData.isString() && newData.val().length > 0"
          },
          "type": {
            ".validate": "newData.isString() && (newData.val() === 'income' || newData.val() === 'expense')"
          },
          "createdAt": {
            ".validate": "newData.isNumber()"
          },
          "updatedAt": {
            ".validate": "newData.isNumber()"
          }
        }
      }
    },
    
    "reports": {
      "$uid": {
        ".read": "auth != null && auth.uid === $uid",
        "$reportId": {
          ".write": "auth != null && auth.uid === $uid",
          ".validate": "newData.hasChildren(['type', 'period', 'data', 'createdAt', 'updatedAt'])",
          "type": {
            ".validate": "newData.isString() && (newData.val() === 'daily' || newData.val() === 'weekly' || newData.val() === 'monthly' || newData.val() === 'yearly')"
          },
          "period": {
            ".validate": "newData.isString()"
          },
          "data": {
            ".validate": "newData.isObject()"
          },
          "createdAt": {
            ".validate": "newData.isNumber()"
          },
          "updatedAt": {
            ".validate": "newData.isNumber()"
          }
        }
      }
    },
    
    "auditLogs": {
      ".read": "auth != null && root.child('users').child(auth.uid).child('role').val() === 'manager'",
      ".write": "auth != null",
      "$logId": {
        ".read": "auth != null && (data.child('userId').val() === auth.uid || root.child('users').child(auth.uid).child('role').val() === 'manager')",
        ".write": "auth != null && data.child('userId').val() === auth.uid"
      }
    },
    
    "verificationCodes": {
      "$uid": {
        ".read": "auth != null && auth.uid === $uid",
        ".write": "auth != null && auth.uid === $uid"
      }
    },
    
    "fuelSales": {
      ".read": "auth != null",
      ".write": "auth != null && (root.child('users').child(auth.uid).child('role').val() === 'attendant' || root.child('users').child(auth.uid).child('role').val() === 'manager')"
    },
    
    "expenses": {
      ".read": "auth != null",
      ".write": "auth != null && (root.child('users').child(auth.uid).child('role').val() === 'attendant' || root.child('users').child(auth.uid).child('role').val() === 'manager')"
    },
    
    "shifts": {
      ".read": "auth != null",
      ".write": "auth != null && (root.child('users').child(auth.uid).child('role').val() === 'attendant' || root.child('users').child(auth.uid).child('role').val() === 'manager')"
    }
  }
} 